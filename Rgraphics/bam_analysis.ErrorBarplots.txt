

samplename <- as.character(commandArgs(trailingOnly = TRUE)[1])
BarcodeFamily <- as.character(commandArgs(trailingOnly = TRUE)[2])  # cons3 to fill 'Sample9292.bamPositionComposition.???.txt'
PDFfilename <- paste(c(samplename, BarcodeFamily, "BamAmpliconErrorBarplots.pdf"), collapse="_")


# A script to draw positional composition bar plots


calcReferenceError.raw <- function(v) { 
		1 - (max(as.numeric(v[5:11]), na.rm=T) / as.numeric(v[12]))
		}

calcConsensusError.raw <- function(v) { 
		1 - (max(as.numeric(v[13:19]), na.rm=T) / as.numeric(v[20]))
		}

# calcReferenceFraction.ConsNoSingletons <- function(v) { 
		# bases <- as.numeric(v[3:7])
		# bases[5] <- bases[5] - sum(bases[1:4] == 1, na.rm=T) # Decrement total depth by number of singletons
		# bases[bases == 1] <- NA # Set Singletons to NA
		# max(bases[1:4], na.rm=T) / bases[5]
		# }


# Load the requested BarcodeFamily consensusPositionalComposition file
#
CPfile <- paste(c(samplename, ".bamPositionComposition.", BarcodeFamily, ".txt"), collapse="")
posComp.consensus <- read.delim(file=CPfile, header=T, colClasses=c(rep("factor",2), "numeric", "factor", rep("numeric", 16)))
# str(posComp.consensus)

posComp.consensus$rawPerror <- apply(posComp.consensus, 1, calcReferenceError.raw )  # Calculate Raw Error rate 
posComp.consensus$consPerror <- apply(posComp.consensus, 1, calcConsensusError.raw )  # Calculate Consensus Error rate 

# Set a minimum error rate for positions with no errors
posComp.consensus$isMinError <- ifelse(posComp.consensus$consPerror == 0, TRUE, FALSE) # Set a flag (needed later for plotting)
posComp.consensus$consPerror <- ifelse(posComp.consensus$isMinError, (1 / posComp.consensus$consDepth), posComp.consensus$consPerror) # Set the minimum error rate

posComp.consensus$indexingFactor <- ( posComp.consensus$rawPerror / posComp.consensus$consPerror )
posComp.consensus$PerrorLog.r <- log(posComp.consensus$rawPerror, 10)
posComp.consensus$PerrorLog.c <- log(posComp.consensus$consPerror, 10)

# Testing
# str(posComp.consensus)
# summary(posComp.consensus)


# Quick demo plots
#
library(ggplot2)
library(reshape)

pdf(file=PDFfilename, width=8, height=8)

x <- posComp.consensus
# head(x)

# Sort by all positions
plot(x$PerrorLog.c, ylab="-log10 Error Rate", main="All error rates by Position", xlab="Position", 
	ylim=c(-5, -2),  pch=20, cex=0.7,
	col = ifelse(x$isMinError, "grey60", "black")
	)
points(x$PerrorLog.r, pch=20, col="darkred", cex=0.7)
legend("topleft", legend=c("Raw Reads", "Consensus Reads"), fill=c("darkred", "black"))

# Sort within amplicons
for ( a in unique(x$Alias) ) { x[x$Alias == a,] <- x[x$Alias == a,][order(x$PerrorLog.c[x$Alias == a]),] }
plot(x$PerrorLog.c, ylab="-log10 Error Rate", main="All error rates by Position, Amplicon", xlab="Position", 
	ylim=c(-4.5, -2), pch=20, cex=0.7,
	col = ifelse(x$isMinError, "grey60", "black")
	)
points(x$PerrorLog.r, pch=20, col="darkred", cex=0.7)
legend("topleft", legend=c("Raw Reads", "Consensus Reads"), fill=c("darkred", "black"))

# Plot each amplicon seperately
for ( a in unique(x$Alias) ) { 
	x.oneAmp <- x[x$Alias == a,] 
	plot(x.oneAmp$PerrorLog.c, ylab="-log10 Error Rate", xlab="Position", 
		main=paste(c("All error rates by Position, ", a), sep=""),
		ylim=c(-4.5, -2), pch=20, cex=0.7,
		col = ifelse(x.oneAmp$isMinError, "grey60", "black")
		)
	points(x.oneAmp$PerrorLog.r, pch=20, col="darkred", cex=0.7)
	legend("topleft", legend=c("Raw Reads", "Consensus Reads"), fill=c("darkred", "black"))
}

# Plot each amplicon seperately
# as bar plots
for ( a in unique(x$Alias) ) { 
	x.oneAmp <- x[x$Alias == a,c("Position", "rawPerror", "consPerror")]
	x.oneAmp.molten <- melt(x.oneAmp, id="Position")
#	str(x.oneAmp.molten)

	# Get the amplicon startpoint to help create the plot position labels
	chromStart <- as.numeric(unlist(strsplit(as.character((x$X.AmpliconChromStart)[x$Alias == a][1]), split = ":"))[2])
	# print(chromStart)
	x.oneAmp.molten$Position <- x.oneAmp.molten$Position + chromStart
	tickLabels <- seq(min(x.oneAmp.molten$Position), max(x.oneAmp.molten$Position), 2)
	
	g <- ggplot(x.oneAmp.molten, aes(x=Position, y=value, fill=variable)) + geom_bar(position="dodge", stat = "identity")
	g <- g + theme_bw() + labs(title = paste(samplename, a, BarcodeFamily))
	g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) + scale_x_continuous(breaks=tickLabels)
	ggsave(g, file=paste(c(samplename, BarcodeFamily, a, "BamAmpliconErrorBarplots.pdf"), collapse="_"), height = 6, width = 12)

}

graphics.off()

